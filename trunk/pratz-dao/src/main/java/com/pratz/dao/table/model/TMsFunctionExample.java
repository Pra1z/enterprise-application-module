package com.pratz.dao.table.model;

import java.util.ArrayList;
import java.util.List;

public class TMsFunctionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PUBLIC.T_MS_FUNCTION
     *
     * @mbggenerated Tue Mar 10 02:19:48 ICT 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PUBLIC.T_MS_FUNCTION
     *
     * @mbggenerated Tue Mar 10 02:19:48 ICT 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PUBLIC.T_MS_FUNCTION
     *
     * @mbggenerated Tue Mar 10 02:19:48 ICT 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.T_MS_FUNCTION
     *
     * @mbggenerated Tue Mar 10 02:19:48 ICT 2015
     */
    public TMsFunctionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.T_MS_FUNCTION
     *
     * @mbggenerated Tue Mar 10 02:19:48 ICT 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.T_MS_FUNCTION
     *
     * @mbggenerated Tue Mar 10 02:19:48 ICT 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.T_MS_FUNCTION
     *
     * @mbggenerated Tue Mar 10 02:19:48 ICT 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.T_MS_FUNCTION
     *
     * @mbggenerated Tue Mar 10 02:19:48 ICT 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.T_MS_FUNCTION
     *
     * @mbggenerated Tue Mar 10 02:19:48 ICT 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.T_MS_FUNCTION
     *
     * @mbggenerated Tue Mar 10 02:19:48 ICT 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.T_MS_FUNCTION
     *
     * @mbggenerated Tue Mar 10 02:19:48 ICT 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.T_MS_FUNCTION
     *
     * @mbggenerated Tue Mar 10 02:19:48 ICT 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.T_MS_FUNCTION
     *
     * @mbggenerated Tue Mar 10 02:19:48 ICT 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.T_MS_FUNCTION
     *
     * @mbggenerated Tue Mar 10 02:19:48 ICT 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PUBLIC.T_MS_FUNCTION
     *
     * @mbggenerated Tue Mar 10 02:19:48 ICT 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFunctionidIsNull() {
            addCriterion("FUNCTIONID is null");
            return (Criteria) this;
        }

        public Criteria andFunctionidIsNotNull() {
            addCriterion("FUNCTIONID is not null");
            return (Criteria) this;
        }

        public Criteria andFunctionidEqualTo(String value) {
            addCriterion("FUNCTIONID =", value, "functionid");
            return (Criteria) this;
        }

        public Criteria andFunctionidNotEqualTo(String value) {
            addCriterion("FUNCTIONID <>", value, "functionid");
            return (Criteria) this;
        }

        public Criteria andFunctionidGreaterThan(String value) {
            addCriterion("FUNCTIONID >", value, "functionid");
            return (Criteria) this;
        }

        public Criteria andFunctionidGreaterThanOrEqualTo(String value) {
            addCriterion("FUNCTIONID >=", value, "functionid");
            return (Criteria) this;
        }

        public Criteria andFunctionidLessThan(String value) {
            addCriterion("FUNCTIONID <", value, "functionid");
            return (Criteria) this;
        }

        public Criteria andFunctionidLessThanOrEqualTo(String value) {
            addCriterion("FUNCTIONID <=", value, "functionid");
            return (Criteria) this;
        }

        public Criteria andFunctionidLike(String value) {
            addCriterion("FUNCTIONID like", value, "functionid");
            return (Criteria) this;
        }

        public Criteria andFunctionidNotLike(String value) {
            addCriterion("FUNCTIONID not like", value, "functionid");
            return (Criteria) this;
        }

        public Criteria andFunctionidIn(List<String> values) {
            addCriterion("FUNCTIONID in", values, "functionid");
            return (Criteria) this;
        }

        public Criteria andFunctionidNotIn(List<String> values) {
            addCriterion("FUNCTIONID not in", values, "functionid");
            return (Criteria) this;
        }

        public Criteria andFunctionidBetween(String value1, String value2) {
            addCriterion("FUNCTIONID between", value1, value2, "functionid");
            return (Criteria) this;
        }

        public Criteria andFunctionidNotBetween(String value1, String value2) {
            addCriterion("FUNCTIONID not between", value1, value2, "functionid");
            return (Criteria) this;
        }

        public Criteria andFunctiongroupIsNull() {
            addCriterion("FUNCTIONGROUP is null");
            return (Criteria) this;
        }

        public Criteria andFunctiongroupIsNotNull() {
            addCriterion("FUNCTIONGROUP is not null");
            return (Criteria) this;
        }

        public Criteria andFunctiongroupEqualTo(String value) {
            addCriterion("FUNCTIONGROUP =", value, "functiongroup");
            return (Criteria) this;
        }

        public Criteria andFunctiongroupNotEqualTo(String value) {
            addCriterion("FUNCTIONGROUP <>", value, "functiongroup");
            return (Criteria) this;
        }

        public Criteria andFunctiongroupGreaterThan(String value) {
            addCriterion("FUNCTIONGROUP >", value, "functiongroup");
            return (Criteria) this;
        }

        public Criteria andFunctiongroupGreaterThanOrEqualTo(String value) {
            addCriterion("FUNCTIONGROUP >=", value, "functiongroup");
            return (Criteria) this;
        }

        public Criteria andFunctiongroupLessThan(String value) {
            addCriterion("FUNCTIONGROUP <", value, "functiongroup");
            return (Criteria) this;
        }

        public Criteria andFunctiongroupLessThanOrEqualTo(String value) {
            addCriterion("FUNCTIONGROUP <=", value, "functiongroup");
            return (Criteria) this;
        }

        public Criteria andFunctiongroupLike(String value) {
            addCriterion("FUNCTIONGROUP like", value, "functiongroup");
            return (Criteria) this;
        }

        public Criteria andFunctiongroupNotLike(String value) {
            addCriterion("FUNCTIONGROUP not like", value, "functiongroup");
            return (Criteria) this;
        }

        public Criteria andFunctiongroupIn(List<String> values) {
            addCriterion("FUNCTIONGROUP in", values, "functiongroup");
            return (Criteria) this;
        }

        public Criteria andFunctiongroupNotIn(List<String> values) {
            addCriterion("FUNCTIONGROUP not in", values, "functiongroup");
            return (Criteria) this;
        }

        public Criteria andFunctiongroupBetween(String value1, String value2) {
            addCriterion("FUNCTIONGROUP between", value1, value2, "functiongroup");
            return (Criteria) this;
        }

        public Criteria andFunctiongroupNotBetween(String value1, String value2) {
            addCriterion("FUNCTIONGROUP not between", value1, value2, "functiongroup");
            return (Criteria) this;
        }

        public Criteria andFunctioncomponentIsNull() {
            addCriterion("FUNCTIONCOMPONENT is null");
            return (Criteria) this;
        }

        public Criteria andFunctioncomponentIsNotNull() {
            addCriterion("FUNCTIONCOMPONENT is not null");
            return (Criteria) this;
        }

        public Criteria andFunctioncomponentEqualTo(String value) {
            addCriterion("FUNCTIONCOMPONENT =", value, "functioncomponent");
            return (Criteria) this;
        }

        public Criteria andFunctioncomponentNotEqualTo(String value) {
            addCriterion("FUNCTIONCOMPONENT <>", value, "functioncomponent");
            return (Criteria) this;
        }

        public Criteria andFunctioncomponentGreaterThan(String value) {
            addCriterion("FUNCTIONCOMPONENT >", value, "functioncomponent");
            return (Criteria) this;
        }

        public Criteria andFunctioncomponentGreaterThanOrEqualTo(String value) {
            addCriterion("FUNCTIONCOMPONENT >=", value, "functioncomponent");
            return (Criteria) this;
        }

        public Criteria andFunctioncomponentLessThan(String value) {
            addCriterion("FUNCTIONCOMPONENT <", value, "functioncomponent");
            return (Criteria) this;
        }

        public Criteria andFunctioncomponentLessThanOrEqualTo(String value) {
            addCriterion("FUNCTIONCOMPONENT <=", value, "functioncomponent");
            return (Criteria) this;
        }

        public Criteria andFunctioncomponentLike(String value) {
            addCriterion("FUNCTIONCOMPONENT like", value, "functioncomponent");
            return (Criteria) this;
        }

        public Criteria andFunctioncomponentNotLike(String value) {
            addCriterion("FUNCTIONCOMPONENT not like", value, "functioncomponent");
            return (Criteria) this;
        }

        public Criteria andFunctioncomponentIn(List<String> values) {
            addCriterion("FUNCTIONCOMPONENT in", values, "functioncomponent");
            return (Criteria) this;
        }

        public Criteria andFunctioncomponentNotIn(List<String> values) {
            addCriterion("FUNCTIONCOMPONENT not in", values, "functioncomponent");
            return (Criteria) this;
        }

        public Criteria andFunctioncomponentBetween(String value1, String value2) {
            addCriterion("FUNCTIONCOMPONENT between", value1, value2, "functioncomponent");
            return (Criteria) this;
        }

        public Criteria andFunctioncomponentNotBetween(String value1, String value2) {
            addCriterion("FUNCTIONCOMPONENT not between", value1, value2, "functioncomponent");
            return (Criteria) this;
        }

        public Criteria andFunctionnameIsNull() {
            addCriterion("FUNCTIONNAME is null");
            return (Criteria) this;
        }

        public Criteria andFunctionnameIsNotNull() {
            addCriterion("FUNCTIONNAME is not null");
            return (Criteria) this;
        }

        public Criteria andFunctionnameEqualTo(String value) {
            addCriterion("FUNCTIONNAME =", value, "functionname");
            return (Criteria) this;
        }

        public Criteria andFunctionnameNotEqualTo(String value) {
            addCriterion("FUNCTIONNAME <>", value, "functionname");
            return (Criteria) this;
        }

        public Criteria andFunctionnameGreaterThan(String value) {
            addCriterion("FUNCTIONNAME >", value, "functionname");
            return (Criteria) this;
        }

        public Criteria andFunctionnameGreaterThanOrEqualTo(String value) {
            addCriterion("FUNCTIONNAME >=", value, "functionname");
            return (Criteria) this;
        }

        public Criteria andFunctionnameLessThan(String value) {
            addCriterion("FUNCTIONNAME <", value, "functionname");
            return (Criteria) this;
        }

        public Criteria andFunctionnameLessThanOrEqualTo(String value) {
            addCriterion("FUNCTIONNAME <=", value, "functionname");
            return (Criteria) this;
        }

        public Criteria andFunctionnameLike(String value) {
            addCriterion("FUNCTIONNAME like", value, "functionname");
            return (Criteria) this;
        }

        public Criteria andFunctionnameNotLike(String value) {
            addCriterion("FUNCTIONNAME not like", value, "functionname");
            return (Criteria) this;
        }

        public Criteria andFunctionnameIn(List<String> values) {
            addCriterion("FUNCTIONNAME in", values, "functionname");
            return (Criteria) this;
        }

        public Criteria andFunctionnameNotIn(List<String> values) {
            addCriterion("FUNCTIONNAME not in", values, "functionname");
            return (Criteria) this;
        }

        public Criteria andFunctionnameBetween(String value1, String value2) {
            addCriterion("FUNCTIONNAME between", value1, value2, "functionname");
            return (Criteria) this;
        }

        public Criteria andFunctionnameNotBetween(String value1, String value2) {
            addCriterion("FUNCTIONNAME not between", value1, value2, "functionname");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PUBLIC.T_MS_FUNCTION
     *
     * @mbggenerated do_not_delete_during_merge Tue Mar 10 02:19:48 ICT 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PUBLIC.T_MS_FUNCTION
     *
     * @mbggenerated Tue Mar 10 02:19:48 ICT 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pratz.dao.table.mapper.SystemSequencesMapper" >
  <resultMap id="BaseResultMap" type="com.pratz.dao.table.model.SystemSequences" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 21 14:24:50 ICT 2015.
    -->
    <result column="SEQUENCE_CATALOG" property="sequenceCatalog" jdbcType="VARCHAR" />
    <result column="SEQUENCE_SCHEMA" property="sequenceSchema" jdbcType="VARCHAR" />
    <result column="SEQUENCE_NAME" property="sequenceName" jdbcType="VARCHAR" />
    <result column="DATA_TYPE" property="dataType" jdbcType="VARCHAR" />
    <result column="NUMERIC_PRECISION" property="numericPrecision" jdbcType="BIGINT" />
    <result column="NUMERIC_PRECISION_RADIX" property="numericPrecisionRadix" jdbcType="BIGINT" />
    <result column="NUMERIC_SCALE" property="numericScale" jdbcType="BIGINT" />
    <result column="MAXIMUM_VALUE" property="maximumValue" jdbcType="VARCHAR" />
    <result column="MINIMUM_VALUE" property="minimumValue" jdbcType="VARCHAR" />
    <result column="INCREMENT" property="increment" jdbcType="VARCHAR" />
    <result column="CYCLE_OPTION" property="cycleOption" jdbcType="VARCHAR" />
    <result column="DECLARED_DATA_TYPE" property="declaredDataType" jdbcType="VARCHAR" />
    <result column="DECLARED_NUMERIC_PRECISION" property="declaredNumericPrecision" jdbcType="BIGINT" />
    <result column="DECLARED_NUMERIC_SCALE" property="declaredNumericScale" jdbcType="BIGINT" />
    <result column="START_WITH" property="startWith" jdbcType="VARCHAR" />
    <result column="NEXT_VALUE" property="nextValue" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 21 14:24:50 ICT 2015.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 21 14:24:50 ICT 2015.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 21 14:24:50 ICT 2015.
    -->
    SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, DATA_TYPE, NUMERIC_PRECISION, NUMERIC_PRECISION_RADIX, 
    NUMERIC_SCALE, MAXIMUM_VALUE, MINIMUM_VALUE, INCREMENT, CYCLE_OPTION, DECLARED_DATA_TYPE, 
    DECLARED_NUMERIC_PRECISION, DECLARED_NUMERIC_SCALE, START_WITH, NEXT_VALUE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pratz.dao.table.model.SystemSequencesCriteria" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 21 14:24:50 ICT 2015.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from INFORMATION_SCHEMA.SYSTEM_SEQUENCES
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.pratz.dao.table.model.SystemSequencesCriteria" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 21 14:24:50 ICT 2015.
    -->
    delete from INFORMATION_SCHEMA.SYSTEM_SEQUENCES
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pratz.dao.table.model.SystemSequences" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 21 14:24:50 ICT 2015.
    -->
    insert into INFORMATION_SCHEMA.SYSTEM_SEQUENCES (SEQUENCE_CATALOG, SEQUENCE_SCHEMA, 
      SEQUENCE_NAME, DATA_TYPE, NUMERIC_PRECISION, 
      NUMERIC_PRECISION_RADIX, NUMERIC_SCALE, MAXIMUM_VALUE, 
      MINIMUM_VALUE, INCREMENT, CYCLE_OPTION, 
      DECLARED_DATA_TYPE, DECLARED_NUMERIC_PRECISION, 
      DECLARED_NUMERIC_SCALE, START_WITH, NEXT_VALUE
      )
    values (#{sequenceCatalog,jdbcType=VARCHAR}, #{sequenceSchema,jdbcType=VARCHAR}, 
      #{sequenceName,jdbcType=VARCHAR}, #{dataType,jdbcType=VARCHAR}, #{numericPrecision,jdbcType=BIGINT}, 
      #{numericPrecisionRadix,jdbcType=BIGINT}, #{numericScale,jdbcType=BIGINT}, #{maximumValue,jdbcType=VARCHAR}, 
      #{minimumValue,jdbcType=VARCHAR}, #{increment,jdbcType=VARCHAR}, #{cycleOption,jdbcType=VARCHAR}, 
      #{declaredDataType,jdbcType=VARCHAR}, #{declaredNumericPrecision,jdbcType=BIGINT}, 
      #{declaredNumericScale,jdbcType=BIGINT}, #{startWith,jdbcType=VARCHAR}, #{nextValue,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pratz.dao.table.model.SystemSequences" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 21 14:24:50 ICT 2015.
    -->
    insert into INFORMATION_SCHEMA.SYSTEM_SEQUENCES
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sequenceCatalog != null" >
        SEQUENCE_CATALOG,
      </if>
      <if test="sequenceSchema != null" >
        SEQUENCE_SCHEMA,
      </if>
      <if test="sequenceName != null" >
        SEQUENCE_NAME,
      </if>
      <if test="dataType != null" >
        DATA_TYPE,
      </if>
      <if test="numericPrecision != null" >
        NUMERIC_PRECISION,
      </if>
      <if test="numericPrecisionRadix != null" >
        NUMERIC_PRECISION_RADIX,
      </if>
      <if test="numericScale != null" >
        NUMERIC_SCALE,
      </if>
      <if test="maximumValue != null" >
        MAXIMUM_VALUE,
      </if>
      <if test="minimumValue != null" >
        MINIMUM_VALUE,
      </if>
      <if test="increment != null" >
        INCREMENT,
      </if>
      <if test="cycleOption != null" >
        CYCLE_OPTION,
      </if>
      <if test="declaredDataType != null" >
        DECLARED_DATA_TYPE,
      </if>
      <if test="declaredNumericPrecision != null" >
        DECLARED_NUMERIC_PRECISION,
      </if>
      <if test="declaredNumericScale != null" >
        DECLARED_NUMERIC_SCALE,
      </if>
      <if test="startWith != null" >
        START_WITH,
      </if>
      <if test="nextValue != null" >
        NEXT_VALUE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sequenceCatalog != null" >
        #{sequenceCatalog,jdbcType=VARCHAR},
      </if>
      <if test="sequenceSchema != null" >
        #{sequenceSchema,jdbcType=VARCHAR},
      </if>
      <if test="sequenceName != null" >
        #{sequenceName,jdbcType=VARCHAR},
      </if>
      <if test="dataType != null" >
        #{dataType,jdbcType=VARCHAR},
      </if>
      <if test="numericPrecision != null" >
        #{numericPrecision,jdbcType=BIGINT},
      </if>
      <if test="numericPrecisionRadix != null" >
        #{numericPrecisionRadix,jdbcType=BIGINT},
      </if>
      <if test="numericScale != null" >
        #{numericScale,jdbcType=BIGINT},
      </if>
      <if test="maximumValue != null" >
        #{maximumValue,jdbcType=VARCHAR},
      </if>
      <if test="minimumValue != null" >
        #{minimumValue,jdbcType=VARCHAR},
      </if>
      <if test="increment != null" >
        #{increment,jdbcType=VARCHAR},
      </if>
      <if test="cycleOption != null" >
        #{cycleOption,jdbcType=VARCHAR},
      </if>
      <if test="declaredDataType != null" >
        #{declaredDataType,jdbcType=VARCHAR},
      </if>
      <if test="declaredNumericPrecision != null" >
        #{declaredNumericPrecision,jdbcType=BIGINT},
      </if>
      <if test="declaredNumericScale != null" >
        #{declaredNumericScale,jdbcType=BIGINT},
      </if>
      <if test="startWith != null" >
        #{startWith,jdbcType=VARCHAR},
      </if>
      <if test="nextValue != null" >
        #{nextValue,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pratz.dao.table.model.SystemSequencesCriteria" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 21 14:24:50 ICT 2015.
    -->
    select count(*) from INFORMATION_SCHEMA.SYSTEM_SEQUENCES
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 21 14:24:50 ICT 2015.
    -->
    update INFORMATION_SCHEMA.SYSTEM_SEQUENCES
    <set >
      <if test="record.sequenceCatalog != null" >
        SEQUENCE_CATALOG = #{record.sequenceCatalog,jdbcType=VARCHAR},
      </if>
      <if test="record.sequenceSchema != null" >
        SEQUENCE_SCHEMA = #{record.sequenceSchema,jdbcType=VARCHAR},
      </if>
      <if test="record.sequenceName != null" >
        SEQUENCE_NAME = #{record.sequenceName,jdbcType=VARCHAR},
      </if>
      <if test="record.dataType != null" >
        DATA_TYPE = #{record.dataType,jdbcType=VARCHAR},
      </if>
      <if test="record.numericPrecision != null" >
        NUMERIC_PRECISION = #{record.numericPrecision,jdbcType=BIGINT},
      </if>
      <if test="record.numericPrecisionRadix != null" >
        NUMERIC_PRECISION_RADIX = #{record.numericPrecisionRadix,jdbcType=BIGINT},
      </if>
      <if test="record.numericScale != null" >
        NUMERIC_SCALE = #{record.numericScale,jdbcType=BIGINT},
      </if>
      <if test="record.maximumValue != null" >
        MAXIMUM_VALUE = #{record.maximumValue,jdbcType=VARCHAR},
      </if>
      <if test="record.minimumValue != null" >
        MINIMUM_VALUE = #{record.minimumValue,jdbcType=VARCHAR},
      </if>
      <if test="record.increment != null" >
        INCREMENT = #{record.increment,jdbcType=VARCHAR},
      </if>
      <if test="record.cycleOption != null" >
        CYCLE_OPTION = #{record.cycleOption,jdbcType=VARCHAR},
      </if>
      <if test="record.declaredDataType != null" >
        DECLARED_DATA_TYPE = #{record.declaredDataType,jdbcType=VARCHAR},
      </if>
      <if test="record.declaredNumericPrecision != null" >
        DECLARED_NUMERIC_PRECISION = #{record.declaredNumericPrecision,jdbcType=BIGINT},
      </if>
      <if test="record.declaredNumericScale != null" >
        DECLARED_NUMERIC_SCALE = #{record.declaredNumericScale,jdbcType=BIGINT},
      </if>
      <if test="record.startWith != null" >
        START_WITH = #{record.startWith,jdbcType=VARCHAR},
      </if>
      <if test="record.nextValue != null" >
        NEXT_VALUE = #{record.nextValue,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 21 14:24:50 ICT 2015.
    -->
    update INFORMATION_SCHEMA.SYSTEM_SEQUENCES
    set SEQUENCE_CATALOG = #{record.sequenceCatalog,jdbcType=VARCHAR},
      SEQUENCE_SCHEMA = #{record.sequenceSchema,jdbcType=VARCHAR},
      SEQUENCE_NAME = #{record.sequenceName,jdbcType=VARCHAR},
      DATA_TYPE = #{record.dataType,jdbcType=VARCHAR},
      NUMERIC_PRECISION = #{record.numericPrecision,jdbcType=BIGINT},
      NUMERIC_PRECISION_RADIX = #{record.numericPrecisionRadix,jdbcType=BIGINT},
      NUMERIC_SCALE = #{record.numericScale,jdbcType=BIGINT},
      MAXIMUM_VALUE = #{record.maximumValue,jdbcType=VARCHAR},
      MINIMUM_VALUE = #{record.minimumValue,jdbcType=VARCHAR},
      INCREMENT = #{record.increment,jdbcType=VARCHAR},
      CYCLE_OPTION = #{record.cycleOption,jdbcType=VARCHAR},
      DECLARED_DATA_TYPE = #{record.declaredDataType,jdbcType=VARCHAR},
      DECLARED_NUMERIC_PRECISION = #{record.declaredNumericPrecision,jdbcType=BIGINT},
      DECLARED_NUMERIC_SCALE = #{record.declaredNumericScale,jdbcType=BIGINT},
      START_WITH = #{record.startWith,jdbcType=VARCHAR},
      NEXT_VALUE = #{record.nextValue,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>
package com.pratz.dao.table.model;

import java.util.ArrayList;
import java.util.List;

public class SystemPropertiesCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table INFORMATION_SCHEMA.SYSTEM_PROPERTIES
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table INFORMATION_SCHEMA.SYSTEM_PROPERTIES
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table INFORMATION_SCHEMA.SYSTEM_PROPERTIES
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SYSTEM_PROPERTIES
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    public SystemPropertiesCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SYSTEM_PROPERTIES
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SYSTEM_PROPERTIES
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SYSTEM_PROPERTIES
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SYSTEM_PROPERTIES
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SYSTEM_PROPERTIES
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SYSTEM_PROPERTIES
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SYSTEM_PROPERTIES
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SYSTEM_PROPERTIES
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SYSTEM_PROPERTIES
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SYSTEM_PROPERTIES
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INFORMATION_SCHEMA.SYSTEM_PROPERTIES
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPropertyScopeIsNull() {
            addCriterion("PROPERTY_SCOPE is null");
            return (Criteria) this;
        }

        public Criteria andPropertyScopeIsNotNull() {
            addCriterion("PROPERTY_SCOPE is not null");
            return (Criteria) this;
        }

        public Criteria andPropertyScopeEqualTo(String value) {
            addCriterion("PROPERTY_SCOPE =", value, "propertyScope");
            return (Criteria) this;
        }

        public Criteria andPropertyScopeNotEqualTo(String value) {
            addCriterion("PROPERTY_SCOPE <>", value, "propertyScope");
            return (Criteria) this;
        }

        public Criteria andPropertyScopeGreaterThan(String value) {
            addCriterion("PROPERTY_SCOPE >", value, "propertyScope");
            return (Criteria) this;
        }

        public Criteria andPropertyScopeGreaterThanOrEqualTo(String value) {
            addCriterion("PROPERTY_SCOPE >=", value, "propertyScope");
            return (Criteria) this;
        }

        public Criteria andPropertyScopeLessThan(String value) {
            addCriterion("PROPERTY_SCOPE <", value, "propertyScope");
            return (Criteria) this;
        }

        public Criteria andPropertyScopeLessThanOrEqualTo(String value) {
            addCriterion("PROPERTY_SCOPE <=", value, "propertyScope");
            return (Criteria) this;
        }

        public Criteria andPropertyScopeLike(String value) {
            addCriterion("PROPERTY_SCOPE like", value, "propertyScope");
            return (Criteria) this;
        }

        public Criteria andPropertyScopeNotLike(String value) {
            addCriterion("PROPERTY_SCOPE not like", value, "propertyScope");
            return (Criteria) this;
        }

        public Criteria andPropertyScopeIn(List<String> values) {
            addCriterion("PROPERTY_SCOPE in", values, "propertyScope");
            return (Criteria) this;
        }

        public Criteria andPropertyScopeNotIn(List<String> values) {
            addCriterion("PROPERTY_SCOPE not in", values, "propertyScope");
            return (Criteria) this;
        }

        public Criteria andPropertyScopeBetween(String value1, String value2) {
            addCriterion("PROPERTY_SCOPE between", value1, value2, "propertyScope");
            return (Criteria) this;
        }

        public Criteria andPropertyScopeNotBetween(String value1, String value2) {
            addCriterion("PROPERTY_SCOPE not between", value1, value2, "propertyScope");
            return (Criteria) this;
        }

        public Criteria andPropertyNamespaceIsNull() {
            addCriterion("PROPERTY_NAMESPACE is null");
            return (Criteria) this;
        }

        public Criteria andPropertyNamespaceIsNotNull() {
            addCriterion("PROPERTY_NAMESPACE is not null");
            return (Criteria) this;
        }

        public Criteria andPropertyNamespaceEqualTo(String value) {
            addCriterion("PROPERTY_NAMESPACE =", value, "propertyNamespace");
            return (Criteria) this;
        }

        public Criteria andPropertyNamespaceNotEqualTo(String value) {
            addCriterion("PROPERTY_NAMESPACE <>", value, "propertyNamespace");
            return (Criteria) this;
        }

        public Criteria andPropertyNamespaceGreaterThan(String value) {
            addCriterion("PROPERTY_NAMESPACE >", value, "propertyNamespace");
            return (Criteria) this;
        }

        public Criteria andPropertyNamespaceGreaterThanOrEqualTo(String value) {
            addCriterion("PROPERTY_NAMESPACE >=", value, "propertyNamespace");
            return (Criteria) this;
        }

        public Criteria andPropertyNamespaceLessThan(String value) {
            addCriterion("PROPERTY_NAMESPACE <", value, "propertyNamespace");
            return (Criteria) this;
        }

        public Criteria andPropertyNamespaceLessThanOrEqualTo(String value) {
            addCriterion("PROPERTY_NAMESPACE <=", value, "propertyNamespace");
            return (Criteria) this;
        }

        public Criteria andPropertyNamespaceLike(String value) {
            addCriterion("PROPERTY_NAMESPACE like", value, "propertyNamespace");
            return (Criteria) this;
        }

        public Criteria andPropertyNamespaceNotLike(String value) {
            addCriterion("PROPERTY_NAMESPACE not like", value, "propertyNamespace");
            return (Criteria) this;
        }

        public Criteria andPropertyNamespaceIn(List<String> values) {
            addCriterion("PROPERTY_NAMESPACE in", values, "propertyNamespace");
            return (Criteria) this;
        }

        public Criteria andPropertyNamespaceNotIn(List<String> values) {
            addCriterion("PROPERTY_NAMESPACE not in", values, "propertyNamespace");
            return (Criteria) this;
        }

        public Criteria andPropertyNamespaceBetween(String value1, String value2) {
            addCriterion("PROPERTY_NAMESPACE between", value1, value2, "propertyNamespace");
            return (Criteria) this;
        }

        public Criteria andPropertyNamespaceNotBetween(String value1, String value2) {
            addCriterion("PROPERTY_NAMESPACE not between", value1, value2, "propertyNamespace");
            return (Criteria) this;
        }

        public Criteria andPropertyNameIsNull() {
            addCriterion("PROPERTY_NAME is null");
            return (Criteria) this;
        }

        public Criteria andPropertyNameIsNotNull() {
            addCriterion("PROPERTY_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andPropertyNameEqualTo(String value) {
            addCriterion("PROPERTY_NAME =", value, "propertyName");
            return (Criteria) this;
        }

        public Criteria andPropertyNameNotEqualTo(String value) {
            addCriterion("PROPERTY_NAME <>", value, "propertyName");
            return (Criteria) this;
        }

        public Criteria andPropertyNameGreaterThan(String value) {
            addCriterion("PROPERTY_NAME >", value, "propertyName");
            return (Criteria) this;
        }

        public Criteria andPropertyNameGreaterThanOrEqualTo(String value) {
            addCriterion("PROPERTY_NAME >=", value, "propertyName");
            return (Criteria) this;
        }

        public Criteria andPropertyNameLessThan(String value) {
            addCriterion("PROPERTY_NAME <", value, "propertyName");
            return (Criteria) this;
        }

        public Criteria andPropertyNameLessThanOrEqualTo(String value) {
            addCriterion("PROPERTY_NAME <=", value, "propertyName");
            return (Criteria) this;
        }

        public Criteria andPropertyNameLike(String value) {
            addCriterion("PROPERTY_NAME like", value, "propertyName");
            return (Criteria) this;
        }

        public Criteria andPropertyNameNotLike(String value) {
            addCriterion("PROPERTY_NAME not like", value, "propertyName");
            return (Criteria) this;
        }

        public Criteria andPropertyNameIn(List<String> values) {
            addCriterion("PROPERTY_NAME in", values, "propertyName");
            return (Criteria) this;
        }

        public Criteria andPropertyNameNotIn(List<String> values) {
            addCriterion("PROPERTY_NAME not in", values, "propertyName");
            return (Criteria) this;
        }

        public Criteria andPropertyNameBetween(String value1, String value2) {
            addCriterion("PROPERTY_NAME between", value1, value2, "propertyName");
            return (Criteria) this;
        }

        public Criteria andPropertyNameNotBetween(String value1, String value2) {
            addCriterion("PROPERTY_NAME not between", value1, value2, "propertyName");
            return (Criteria) this;
        }

        public Criteria andPropertyValueIsNull() {
            addCriterion("PROPERTY_VALUE is null");
            return (Criteria) this;
        }

        public Criteria andPropertyValueIsNotNull() {
            addCriterion("PROPERTY_VALUE is not null");
            return (Criteria) this;
        }

        public Criteria andPropertyValueEqualTo(String value) {
            addCriterion("PROPERTY_VALUE =", value, "propertyValue");
            return (Criteria) this;
        }

        public Criteria andPropertyValueNotEqualTo(String value) {
            addCriterion("PROPERTY_VALUE <>", value, "propertyValue");
            return (Criteria) this;
        }

        public Criteria andPropertyValueGreaterThan(String value) {
            addCriterion("PROPERTY_VALUE >", value, "propertyValue");
            return (Criteria) this;
        }

        public Criteria andPropertyValueGreaterThanOrEqualTo(String value) {
            addCriterion("PROPERTY_VALUE >=", value, "propertyValue");
            return (Criteria) this;
        }

        public Criteria andPropertyValueLessThan(String value) {
            addCriterion("PROPERTY_VALUE <", value, "propertyValue");
            return (Criteria) this;
        }

        public Criteria andPropertyValueLessThanOrEqualTo(String value) {
            addCriterion("PROPERTY_VALUE <=", value, "propertyValue");
            return (Criteria) this;
        }

        public Criteria andPropertyValueLike(String value) {
            addCriterion("PROPERTY_VALUE like", value, "propertyValue");
            return (Criteria) this;
        }

        public Criteria andPropertyValueNotLike(String value) {
            addCriterion("PROPERTY_VALUE not like", value, "propertyValue");
            return (Criteria) this;
        }

        public Criteria andPropertyValueIn(List<String> values) {
            addCriterion("PROPERTY_VALUE in", values, "propertyValue");
            return (Criteria) this;
        }

        public Criteria andPropertyValueNotIn(List<String> values) {
            addCriterion("PROPERTY_VALUE not in", values, "propertyValue");
            return (Criteria) this;
        }

        public Criteria andPropertyValueBetween(String value1, String value2) {
            addCriterion("PROPERTY_VALUE between", value1, value2, "propertyValue");
            return (Criteria) this;
        }

        public Criteria andPropertyValueNotBetween(String value1, String value2) {
            addCriterion("PROPERTY_VALUE not between", value1, value2, "propertyValue");
            return (Criteria) this;
        }

        public Criteria andPropertyClassIsNull() {
            addCriterion("PROPERTY_CLASS is null");
            return (Criteria) this;
        }

        public Criteria andPropertyClassIsNotNull() {
            addCriterion("PROPERTY_CLASS is not null");
            return (Criteria) this;
        }

        public Criteria andPropertyClassEqualTo(String value) {
            addCriterion("PROPERTY_CLASS =", value, "propertyClass");
            return (Criteria) this;
        }

        public Criteria andPropertyClassNotEqualTo(String value) {
            addCriterion("PROPERTY_CLASS <>", value, "propertyClass");
            return (Criteria) this;
        }

        public Criteria andPropertyClassGreaterThan(String value) {
            addCriterion("PROPERTY_CLASS >", value, "propertyClass");
            return (Criteria) this;
        }

        public Criteria andPropertyClassGreaterThanOrEqualTo(String value) {
            addCriterion("PROPERTY_CLASS >=", value, "propertyClass");
            return (Criteria) this;
        }

        public Criteria andPropertyClassLessThan(String value) {
            addCriterion("PROPERTY_CLASS <", value, "propertyClass");
            return (Criteria) this;
        }

        public Criteria andPropertyClassLessThanOrEqualTo(String value) {
            addCriterion("PROPERTY_CLASS <=", value, "propertyClass");
            return (Criteria) this;
        }

        public Criteria andPropertyClassLike(String value) {
            addCriterion("PROPERTY_CLASS like", value, "propertyClass");
            return (Criteria) this;
        }

        public Criteria andPropertyClassNotLike(String value) {
            addCriterion("PROPERTY_CLASS not like", value, "propertyClass");
            return (Criteria) this;
        }

        public Criteria andPropertyClassIn(List<String> values) {
            addCriterion("PROPERTY_CLASS in", values, "propertyClass");
            return (Criteria) this;
        }

        public Criteria andPropertyClassNotIn(List<String> values) {
            addCriterion("PROPERTY_CLASS not in", values, "propertyClass");
            return (Criteria) this;
        }

        public Criteria andPropertyClassBetween(String value1, String value2) {
            addCriterion("PROPERTY_CLASS between", value1, value2, "propertyClass");
            return (Criteria) this;
        }

        public Criteria andPropertyClassNotBetween(String value1, String value2) {
            addCriterion("PROPERTY_CLASS not between", value1, value2, "propertyClass");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INFORMATION_SCHEMA.SYSTEM_PROPERTIES
     *
     * @mbggenerated do_not_delete_during_merge Sat Mar 21 14:24:49 ICT 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INFORMATION_SCHEMA.SYSTEM_PROPERTIES
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
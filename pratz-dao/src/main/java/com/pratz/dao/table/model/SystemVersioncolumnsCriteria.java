package com.pratz.dao.table.model;

import java.util.ArrayList;
import java.util.List;

public class SystemVersioncolumnsCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table INFORMATION_SCHEMA.SYSTEM_VERSIONCOLUMNS
     *
     * @mbggenerated Sat Mar 21 14:24:50 ICT 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table INFORMATION_SCHEMA.SYSTEM_VERSIONCOLUMNS
     *
     * @mbggenerated Sat Mar 21 14:24:50 ICT 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table INFORMATION_SCHEMA.SYSTEM_VERSIONCOLUMNS
     *
     * @mbggenerated Sat Mar 21 14:24:50 ICT 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SYSTEM_VERSIONCOLUMNS
     *
     * @mbggenerated Sat Mar 21 14:24:50 ICT 2015
     */
    public SystemVersioncolumnsCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SYSTEM_VERSIONCOLUMNS
     *
     * @mbggenerated Sat Mar 21 14:24:50 ICT 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SYSTEM_VERSIONCOLUMNS
     *
     * @mbggenerated Sat Mar 21 14:24:50 ICT 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SYSTEM_VERSIONCOLUMNS
     *
     * @mbggenerated Sat Mar 21 14:24:50 ICT 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SYSTEM_VERSIONCOLUMNS
     *
     * @mbggenerated Sat Mar 21 14:24:50 ICT 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SYSTEM_VERSIONCOLUMNS
     *
     * @mbggenerated Sat Mar 21 14:24:50 ICT 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SYSTEM_VERSIONCOLUMNS
     *
     * @mbggenerated Sat Mar 21 14:24:50 ICT 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SYSTEM_VERSIONCOLUMNS
     *
     * @mbggenerated Sat Mar 21 14:24:50 ICT 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SYSTEM_VERSIONCOLUMNS
     *
     * @mbggenerated Sat Mar 21 14:24:50 ICT 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SYSTEM_VERSIONCOLUMNS
     *
     * @mbggenerated Sat Mar 21 14:24:50 ICT 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SYSTEM_VERSIONCOLUMNS
     *
     * @mbggenerated Sat Mar 21 14:24:50 ICT 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INFORMATION_SCHEMA.SYSTEM_VERSIONCOLUMNS
     *
     * @mbggenerated Sat Mar 21 14:24:50 ICT 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andScopeIsNull() {
            addCriterion("SCOPE is null");
            return (Criteria) this;
        }

        public Criteria andScopeIsNotNull() {
            addCriterion("SCOPE is not null");
            return (Criteria) this;
        }

        public Criteria andScopeEqualTo(Integer value) {
            addCriterion("SCOPE =", value, "scope");
            return (Criteria) this;
        }

        public Criteria andScopeNotEqualTo(Integer value) {
            addCriterion("SCOPE <>", value, "scope");
            return (Criteria) this;
        }

        public Criteria andScopeGreaterThan(Integer value) {
            addCriterion("SCOPE >", value, "scope");
            return (Criteria) this;
        }

        public Criteria andScopeGreaterThanOrEqualTo(Integer value) {
            addCriterion("SCOPE >=", value, "scope");
            return (Criteria) this;
        }

        public Criteria andScopeLessThan(Integer value) {
            addCriterion("SCOPE <", value, "scope");
            return (Criteria) this;
        }

        public Criteria andScopeLessThanOrEqualTo(Integer value) {
            addCriterion("SCOPE <=", value, "scope");
            return (Criteria) this;
        }

        public Criteria andScopeIn(List<Integer> values) {
            addCriterion("SCOPE in", values, "scope");
            return (Criteria) this;
        }

        public Criteria andScopeNotIn(List<Integer> values) {
            addCriterion("SCOPE not in", values, "scope");
            return (Criteria) this;
        }

        public Criteria andScopeBetween(Integer value1, Integer value2) {
            addCriterion("SCOPE between", value1, value2, "scope");
            return (Criteria) this;
        }

        public Criteria andScopeNotBetween(Integer value1, Integer value2) {
            addCriterion("SCOPE not between", value1, value2, "scope");
            return (Criteria) this;
        }

        public Criteria andColumnNameIsNull() {
            addCriterion("COLUMN_NAME is null");
            return (Criteria) this;
        }

        public Criteria andColumnNameIsNotNull() {
            addCriterion("COLUMN_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andColumnNameEqualTo(String value) {
            addCriterion("COLUMN_NAME =", value, "columnName");
            return (Criteria) this;
        }

        public Criteria andColumnNameNotEqualTo(String value) {
            addCriterion("COLUMN_NAME <>", value, "columnName");
            return (Criteria) this;
        }

        public Criteria andColumnNameGreaterThan(String value) {
            addCriterion("COLUMN_NAME >", value, "columnName");
            return (Criteria) this;
        }

        public Criteria andColumnNameGreaterThanOrEqualTo(String value) {
            addCriterion("COLUMN_NAME >=", value, "columnName");
            return (Criteria) this;
        }

        public Criteria andColumnNameLessThan(String value) {
            addCriterion("COLUMN_NAME <", value, "columnName");
            return (Criteria) this;
        }

        public Criteria andColumnNameLessThanOrEqualTo(String value) {
            addCriterion("COLUMN_NAME <=", value, "columnName");
            return (Criteria) this;
        }

        public Criteria andColumnNameLike(String value) {
            addCriterion("COLUMN_NAME like", value, "columnName");
            return (Criteria) this;
        }

        public Criteria andColumnNameNotLike(String value) {
            addCriterion("COLUMN_NAME not like", value, "columnName");
            return (Criteria) this;
        }

        public Criteria andColumnNameIn(List<String> values) {
            addCriterion("COLUMN_NAME in", values, "columnName");
            return (Criteria) this;
        }

        public Criteria andColumnNameNotIn(List<String> values) {
            addCriterion("COLUMN_NAME not in", values, "columnName");
            return (Criteria) this;
        }

        public Criteria andColumnNameBetween(String value1, String value2) {
            addCriterion("COLUMN_NAME between", value1, value2, "columnName");
            return (Criteria) this;
        }

        public Criteria andColumnNameNotBetween(String value1, String value2) {
            addCriterion("COLUMN_NAME not between", value1, value2, "columnName");
            return (Criteria) this;
        }

        public Criteria andDataTypeIsNull() {
            addCriterion("DATA_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andDataTypeIsNotNull() {
            addCriterion("DATA_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andDataTypeEqualTo(Short value) {
            addCriterion("DATA_TYPE =", value, "dataType");
            return (Criteria) this;
        }

        public Criteria andDataTypeNotEqualTo(Short value) {
            addCriterion("DATA_TYPE <>", value, "dataType");
            return (Criteria) this;
        }

        public Criteria andDataTypeGreaterThan(Short value) {
            addCriterion("DATA_TYPE >", value, "dataType");
            return (Criteria) this;
        }

        public Criteria andDataTypeGreaterThanOrEqualTo(Short value) {
            addCriterion("DATA_TYPE >=", value, "dataType");
            return (Criteria) this;
        }

        public Criteria andDataTypeLessThan(Short value) {
            addCriterion("DATA_TYPE <", value, "dataType");
            return (Criteria) this;
        }

        public Criteria andDataTypeLessThanOrEqualTo(Short value) {
            addCriterion("DATA_TYPE <=", value, "dataType");
            return (Criteria) this;
        }

        public Criteria andDataTypeIn(List<Short> values) {
            addCriterion("DATA_TYPE in", values, "dataType");
            return (Criteria) this;
        }

        public Criteria andDataTypeNotIn(List<Short> values) {
            addCriterion("DATA_TYPE not in", values, "dataType");
            return (Criteria) this;
        }

        public Criteria andDataTypeBetween(Short value1, Short value2) {
            addCriterion("DATA_TYPE between", value1, value2, "dataType");
            return (Criteria) this;
        }

        public Criteria andDataTypeNotBetween(Short value1, Short value2) {
            addCriterion("DATA_TYPE not between", value1, value2, "dataType");
            return (Criteria) this;
        }

        public Criteria andTypeNameIsNull() {
            addCriterion("TYPE_NAME is null");
            return (Criteria) this;
        }

        public Criteria andTypeNameIsNotNull() {
            addCriterion("TYPE_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andTypeNameEqualTo(String value) {
            addCriterion("TYPE_NAME =", value, "typeName");
            return (Criteria) this;
        }

        public Criteria andTypeNameNotEqualTo(String value) {
            addCriterion("TYPE_NAME <>", value, "typeName");
            return (Criteria) this;
        }

        public Criteria andTypeNameGreaterThan(String value) {
            addCriterion("TYPE_NAME >", value, "typeName");
            return (Criteria) this;
        }

        public Criteria andTypeNameGreaterThanOrEqualTo(String value) {
            addCriterion("TYPE_NAME >=", value, "typeName");
            return (Criteria) this;
        }

        public Criteria andTypeNameLessThan(String value) {
            addCriterion("TYPE_NAME <", value, "typeName");
            return (Criteria) this;
        }

        public Criteria andTypeNameLessThanOrEqualTo(String value) {
            addCriterion("TYPE_NAME <=", value, "typeName");
            return (Criteria) this;
        }

        public Criteria andTypeNameLike(String value) {
            addCriterion("TYPE_NAME like", value, "typeName");
            return (Criteria) this;
        }

        public Criteria andTypeNameNotLike(String value) {
            addCriterion("TYPE_NAME not like", value, "typeName");
            return (Criteria) this;
        }

        public Criteria andTypeNameIn(List<String> values) {
            addCriterion("TYPE_NAME in", values, "typeName");
            return (Criteria) this;
        }

        public Criteria andTypeNameNotIn(List<String> values) {
            addCriterion("TYPE_NAME not in", values, "typeName");
            return (Criteria) this;
        }

        public Criteria andTypeNameBetween(String value1, String value2) {
            addCriterion("TYPE_NAME between", value1, value2, "typeName");
            return (Criteria) this;
        }

        public Criteria andTypeNameNotBetween(String value1, String value2) {
            addCriterion("TYPE_NAME not between", value1, value2, "typeName");
            return (Criteria) this;
        }

        public Criteria andColumnSizeIsNull() {
            addCriterion("COLUMN_SIZE is null");
            return (Criteria) this;
        }

        public Criteria andColumnSizeIsNotNull() {
            addCriterion("COLUMN_SIZE is not null");
            return (Criteria) this;
        }

        public Criteria andColumnSizeEqualTo(Short value) {
            addCriterion("COLUMN_SIZE =", value, "columnSize");
            return (Criteria) this;
        }

        public Criteria andColumnSizeNotEqualTo(Short value) {
            addCriterion("COLUMN_SIZE <>", value, "columnSize");
            return (Criteria) this;
        }

        public Criteria andColumnSizeGreaterThan(Short value) {
            addCriterion("COLUMN_SIZE >", value, "columnSize");
            return (Criteria) this;
        }

        public Criteria andColumnSizeGreaterThanOrEqualTo(Short value) {
            addCriterion("COLUMN_SIZE >=", value, "columnSize");
            return (Criteria) this;
        }

        public Criteria andColumnSizeLessThan(Short value) {
            addCriterion("COLUMN_SIZE <", value, "columnSize");
            return (Criteria) this;
        }

        public Criteria andColumnSizeLessThanOrEqualTo(Short value) {
            addCriterion("COLUMN_SIZE <=", value, "columnSize");
            return (Criteria) this;
        }

        public Criteria andColumnSizeIn(List<Short> values) {
            addCriterion("COLUMN_SIZE in", values, "columnSize");
            return (Criteria) this;
        }

        public Criteria andColumnSizeNotIn(List<Short> values) {
            addCriterion("COLUMN_SIZE not in", values, "columnSize");
            return (Criteria) this;
        }

        public Criteria andColumnSizeBetween(Short value1, Short value2) {
            addCriterion("COLUMN_SIZE between", value1, value2, "columnSize");
            return (Criteria) this;
        }

        public Criteria andColumnSizeNotBetween(Short value1, Short value2) {
            addCriterion("COLUMN_SIZE not between", value1, value2, "columnSize");
            return (Criteria) this;
        }

        public Criteria andBufferLengthIsNull() {
            addCriterion("BUFFER_LENGTH is null");
            return (Criteria) this;
        }

        public Criteria andBufferLengthIsNotNull() {
            addCriterion("BUFFER_LENGTH is not null");
            return (Criteria) this;
        }

        public Criteria andBufferLengthEqualTo(Integer value) {
            addCriterion("BUFFER_LENGTH =", value, "bufferLength");
            return (Criteria) this;
        }

        public Criteria andBufferLengthNotEqualTo(Integer value) {
            addCriterion("BUFFER_LENGTH <>", value, "bufferLength");
            return (Criteria) this;
        }

        public Criteria andBufferLengthGreaterThan(Integer value) {
            addCriterion("BUFFER_LENGTH >", value, "bufferLength");
            return (Criteria) this;
        }

        public Criteria andBufferLengthGreaterThanOrEqualTo(Integer value) {
            addCriterion("BUFFER_LENGTH >=", value, "bufferLength");
            return (Criteria) this;
        }

        public Criteria andBufferLengthLessThan(Integer value) {
            addCriterion("BUFFER_LENGTH <", value, "bufferLength");
            return (Criteria) this;
        }

        public Criteria andBufferLengthLessThanOrEqualTo(Integer value) {
            addCriterion("BUFFER_LENGTH <=", value, "bufferLength");
            return (Criteria) this;
        }

        public Criteria andBufferLengthIn(List<Integer> values) {
            addCriterion("BUFFER_LENGTH in", values, "bufferLength");
            return (Criteria) this;
        }

        public Criteria andBufferLengthNotIn(List<Integer> values) {
            addCriterion("BUFFER_LENGTH not in", values, "bufferLength");
            return (Criteria) this;
        }

        public Criteria andBufferLengthBetween(Integer value1, Integer value2) {
            addCriterion("BUFFER_LENGTH between", value1, value2, "bufferLength");
            return (Criteria) this;
        }

        public Criteria andBufferLengthNotBetween(Integer value1, Integer value2) {
            addCriterion("BUFFER_LENGTH not between", value1, value2, "bufferLength");
            return (Criteria) this;
        }

        public Criteria andDecimalDigitsIsNull() {
            addCriterion("DECIMAL_DIGITS is null");
            return (Criteria) this;
        }

        public Criteria andDecimalDigitsIsNotNull() {
            addCriterion("DECIMAL_DIGITS is not null");
            return (Criteria) this;
        }

        public Criteria andDecimalDigitsEqualTo(Short value) {
            addCriterion("DECIMAL_DIGITS =", value, "decimalDigits");
            return (Criteria) this;
        }

        public Criteria andDecimalDigitsNotEqualTo(Short value) {
            addCriterion("DECIMAL_DIGITS <>", value, "decimalDigits");
            return (Criteria) this;
        }

        public Criteria andDecimalDigitsGreaterThan(Short value) {
            addCriterion("DECIMAL_DIGITS >", value, "decimalDigits");
            return (Criteria) this;
        }

        public Criteria andDecimalDigitsGreaterThanOrEqualTo(Short value) {
            addCriterion("DECIMAL_DIGITS >=", value, "decimalDigits");
            return (Criteria) this;
        }

        public Criteria andDecimalDigitsLessThan(Short value) {
            addCriterion("DECIMAL_DIGITS <", value, "decimalDigits");
            return (Criteria) this;
        }

        public Criteria andDecimalDigitsLessThanOrEqualTo(Short value) {
            addCriterion("DECIMAL_DIGITS <=", value, "decimalDigits");
            return (Criteria) this;
        }

        public Criteria andDecimalDigitsIn(List<Short> values) {
            addCriterion("DECIMAL_DIGITS in", values, "decimalDigits");
            return (Criteria) this;
        }

        public Criteria andDecimalDigitsNotIn(List<Short> values) {
            addCriterion("DECIMAL_DIGITS not in", values, "decimalDigits");
            return (Criteria) this;
        }

        public Criteria andDecimalDigitsBetween(Short value1, Short value2) {
            addCriterion("DECIMAL_DIGITS between", value1, value2, "decimalDigits");
            return (Criteria) this;
        }

        public Criteria andDecimalDigitsNotBetween(Short value1, Short value2) {
            addCriterion("DECIMAL_DIGITS not between", value1, value2, "decimalDigits");
            return (Criteria) this;
        }

        public Criteria andPseudoColumnIsNull() {
            addCriterion("PSEUDO_COLUMN is null");
            return (Criteria) this;
        }

        public Criteria andPseudoColumnIsNotNull() {
            addCriterion("PSEUDO_COLUMN is not null");
            return (Criteria) this;
        }

        public Criteria andPseudoColumnEqualTo(Short value) {
            addCriterion("PSEUDO_COLUMN =", value, "pseudoColumn");
            return (Criteria) this;
        }

        public Criteria andPseudoColumnNotEqualTo(Short value) {
            addCriterion("PSEUDO_COLUMN <>", value, "pseudoColumn");
            return (Criteria) this;
        }

        public Criteria andPseudoColumnGreaterThan(Short value) {
            addCriterion("PSEUDO_COLUMN >", value, "pseudoColumn");
            return (Criteria) this;
        }

        public Criteria andPseudoColumnGreaterThanOrEqualTo(Short value) {
            addCriterion("PSEUDO_COLUMN >=", value, "pseudoColumn");
            return (Criteria) this;
        }

        public Criteria andPseudoColumnLessThan(Short value) {
            addCriterion("PSEUDO_COLUMN <", value, "pseudoColumn");
            return (Criteria) this;
        }

        public Criteria andPseudoColumnLessThanOrEqualTo(Short value) {
            addCriterion("PSEUDO_COLUMN <=", value, "pseudoColumn");
            return (Criteria) this;
        }

        public Criteria andPseudoColumnIn(List<Short> values) {
            addCriterion("PSEUDO_COLUMN in", values, "pseudoColumn");
            return (Criteria) this;
        }

        public Criteria andPseudoColumnNotIn(List<Short> values) {
            addCriterion("PSEUDO_COLUMN not in", values, "pseudoColumn");
            return (Criteria) this;
        }

        public Criteria andPseudoColumnBetween(Short value1, Short value2) {
            addCriterion("PSEUDO_COLUMN between", value1, value2, "pseudoColumn");
            return (Criteria) this;
        }

        public Criteria andPseudoColumnNotBetween(Short value1, Short value2) {
            addCriterion("PSEUDO_COLUMN not between", value1, value2, "pseudoColumn");
            return (Criteria) this;
        }

        public Criteria andTableCatIsNull() {
            addCriterion("TABLE_CAT is null");
            return (Criteria) this;
        }

        public Criteria andTableCatIsNotNull() {
            addCriterion("TABLE_CAT is not null");
            return (Criteria) this;
        }

        public Criteria andTableCatEqualTo(String value) {
            addCriterion("TABLE_CAT =", value, "tableCat");
            return (Criteria) this;
        }

        public Criteria andTableCatNotEqualTo(String value) {
            addCriterion("TABLE_CAT <>", value, "tableCat");
            return (Criteria) this;
        }

        public Criteria andTableCatGreaterThan(String value) {
            addCriterion("TABLE_CAT >", value, "tableCat");
            return (Criteria) this;
        }

        public Criteria andTableCatGreaterThanOrEqualTo(String value) {
            addCriterion("TABLE_CAT >=", value, "tableCat");
            return (Criteria) this;
        }

        public Criteria andTableCatLessThan(String value) {
            addCriterion("TABLE_CAT <", value, "tableCat");
            return (Criteria) this;
        }

        public Criteria andTableCatLessThanOrEqualTo(String value) {
            addCriterion("TABLE_CAT <=", value, "tableCat");
            return (Criteria) this;
        }

        public Criteria andTableCatLike(String value) {
            addCriterion("TABLE_CAT like", value, "tableCat");
            return (Criteria) this;
        }

        public Criteria andTableCatNotLike(String value) {
            addCriterion("TABLE_CAT not like", value, "tableCat");
            return (Criteria) this;
        }

        public Criteria andTableCatIn(List<String> values) {
            addCriterion("TABLE_CAT in", values, "tableCat");
            return (Criteria) this;
        }

        public Criteria andTableCatNotIn(List<String> values) {
            addCriterion("TABLE_CAT not in", values, "tableCat");
            return (Criteria) this;
        }

        public Criteria andTableCatBetween(String value1, String value2) {
            addCriterion("TABLE_CAT between", value1, value2, "tableCat");
            return (Criteria) this;
        }

        public Criteria andTableCatNotBetween(String value1, String value2) {
            addCriterion("TABLE_CAT not between", value1, value2, "tableCat");
            return (Criteria) this;
        }

        public Criteria andTableSchemIsNull() {
            addCriterion("TABLE_SCHEM is null");
            return (Criteria) this;
        }

        public Criteria andTableSchemIsNotNull() {
            addCriterion("TABLE_SCHEM is not null");
            return (Criteria) this;
        }

        public Criteria andTableSchemEqualTo(String value) {
            addCriterion("TABLE_SCHEM =", value, "tableSchem");
            return (Criteria) this;
        }

        public Criteria andTableSchemNotEqualTo(String value) {
            addCriterion("TABLE_SCHEM <>", value, "tableSchem");
            return (Criteria) this;
        }

        public Criteria andTableSchemGreaterThan(String value) {
            addCriterion("TABLE_SCHEM >", value, "tableSchem");
            return (Criteria) this;
        }

        public Criteria andTableSchemGreaterThanOrEqualTo(String value) {
            addCriterion("TABLE_SCHEM >=", value, "tableSchem");
            return (Criteria) this;
        }

        public Criteria andTableSchemLessThan(String value) {
            addCriterion("TABLE_SCHEM <", value, "tableSchem");
            return (Criteria) this;
        }

        public Criteria andTableSchemLessThanOrEqualTo(String value) {
            addCriterion("TABLE_SCHEM <=", value, "tableSchem");
            return (Criteria) this;
        }

        public Criteria andTableSchemLike(String value) {
            addCriterion("TABLE_SCHEM like", value, "tableSchem");
            return (Criteria) this;
        }

        public Criteria andTableSchemNotLike(String value) {
            addCriterion("TABLE_SCHEM not like", value, "tableSchem");
            return (Criteria) this;
        }

        public Criteria andTableSchemIn(List<String> values) {
            addCriterion("TABLE_SCHEM in", values, "tableSchem");
            return (Criteria) this;
        }

        public Criteria andTableSchemNotIn(List<String> values) {
            addCriterion("TABLE_SCHEM not in", values, "tableSchem");
            return (Criteria) this;
        }

        public Criteria andTableSchemBetween(String value1, String value2) {
            addCriterion("TABLE_SCHEM between", value1, value2, "tableSchem");
            return (Criteria) this;
        }

        public Criteria andTableSchemNotBetween(String value1, String value2) {
            addCriterion("TABLE_SCHEM not between", value1, value2, "tableSchem");
            return (Criteria) this;
        }

        public Criteria andTableNameIsNull() {
            addCriterion("TABLE_NAME is null");
            return (Criteria) this;
        }

        public Criteria andTableNameIsNotNull() {
            addCriterion("TABLE_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andTableNameEqualTo(String value) {
            addCriterion("TABLE_NAME =", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameNotEqualTo(String value) {
            addCriterion("TABLE_NAME <>", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameGreaterThan(String value) {
            addCriterion("TABLE_NAME >", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameGreaterThanOrEqualTo(String value) {
            addCriterion("TABLE_NAME >=", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameLessThan(String value) {
            addCriterion("TABLE_NAME <", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameLessThanOrEqualTo(String value) {
            addCriterion("TABLE_NAME <=", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameLike(String value) {
            addCriterion("TABLE_NAME like", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameNotLike(String value) {
            addCriterion("TABLE_NAME not like", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameIn(List<String> values) {
            addCriterion("TABLE_NAME in", values, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameNotIn(List<String> values) {
            addCriterion("TABLE_NAME not in", values, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameBetween(String value1, String value2) {
            addCriterion("TABLE_NAME between", value1, value2, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameNotBetween(String value1, String value2) {
            addCriterion("TABLE_NAME not between", value1, value2, "tableName");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INFORMATION_SCHEMA.SYSTEM_VERSIONCOLUMNS
     *
     * @mbggenerated do_not_delete_during_merge Sat Mar 21 14:24:50 ICT 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INFORMATION_SCHEMA.SYSTEM_VERSIONCOLUMNS
     *
     * @mbggenerated Sat Mar 21 14:24:50 ICT 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
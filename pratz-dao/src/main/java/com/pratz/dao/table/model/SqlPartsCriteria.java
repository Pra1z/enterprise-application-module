package com.pratz.dao.table.model;

import java.util.ArrayList;
import java.util.List;

public class SqlPartsCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table INFORMATION_SCHEMA.SQL_PARTS
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table INFORMATION_SCHEMA.SQL_PARTS
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table INFORMATION_SCHEMA.SQL_PARTS
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SQL_PARTS
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    public SqlPartsCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SQL_PARTS
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SQL_PARTS
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SQL_PARTS
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SQL_PARTS
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SQL_PARTS
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SQL_PARTS
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SQL_PARTS
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SQL_PARTS
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SQL_PARTS
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INFORMATION_SCHEMA.SQL_PARTS
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INFORMATION_SCHEMA.SQL_PARTS
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPartIsNull() {
            addCriterion("PART is null");
            return (Criteria) this;
        }

        public Criteria andPartIsNotNull() {
            addCriterion("PART is not null");
            return (Criteria) this;
        }

        public Criteria andPartEqualTo(String value) {
            addCriterion("PART =", value, "part");
            return (Criteria) this;
        }

        public Criteria andPartNotEqualTo(String value) {
            addCriterion("PART <>", value, "part");
            return (Criteria) this;
        }

        public Criteria andPartGreaterThan(String value) {
            addCriterion("PART >", value, "part");
            return (Criteria) this;
        }

        public Criteria andPartGreaterThanOrEqualTo(String value) {
            addCriterion("PART >=", value, "part");
            return (Criteria) this;
        }

        public Criteria andPartLessThan(String value) {
            addCriterion("PART <", value, "part");
            return (Criteria) this;
        }

        public Criteria andPartLessThanOrEqualTo(String value) {
            addCriterion("PART <=", value, "part");
            return (Criteria) this;
        }

        public Criteria andPartLike(String value) {
            addCriterion("PART like", value, "part");
            return (Criteria) this;
        }

        public Criteria andPartNotLike(String value) {
            addCriterion("PART not like", value, "part");
            return (Criteria) this;
        }

        public Criteria andPartIn(List<String> values) {
            addCriterion("PART in", values, "part");
            return (Criteria) this;
        }

        public Criteria andPartNotIn(List<String> values) {
            addCriterion("PART not in", values, "part");
            return (Criteria) this;
        }

        public Criteria andPartBetween(String value1, String value2) {
            addCriterion("PART between", value1, value2, "part");
            return (Criteria) this;
        }

        public Criteria andPartNotBetween(String value1, String value2) {
            addCriterion("PART not between", value1, value2, "part");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("NAME is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("NAME is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("NAME =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("NAME <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("NAME >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("NAME >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("NAME <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("NAME <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("NAME like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("NAME not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("NAME in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("NAME not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("NAME between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("NAME not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andIsSupportedIsNull() {
            addCriterion("IS_SUPPORTED is null");
            return (Criteria) this;
        }

        public Criteria andIsSupportedIsNotNull() {
            addCriterion("IS_SUPPORTED is not null");
            return (Criteria) this;
        }

        public Criteria andIsSupportedEqualTo(String value) {
            addCriterion("IS_SUPPORTED =", value, "isSupported");
            return (Criteria) this;
        }

        public Criteria andIsSupportedNotEqualTo(String value) {
            addCriterion("IS_SUPPORTED <>", value, "isSupported");
            return (Criteria) this;
        }

        public Criteria andIsSupportedGreaterThan(String value) {
            addCriterion("IS_SUPPORTED >", value, "isSupported");
            return (Criteria) this;
        }

        public Criteria andIsSupportedGreaterThanOrEqualTo(String value) {
            addCriterion("IS_SUPPORTED >=", value, "isSupported");
            return (Criteria) this;
        }

        public Criteria andIsSupportedLessThan(String value) {
            addCriterion("IS_SUPPORTED <", value, "isSupported");
            return (Criteria) this;
        }

        public Criteria andIsSupportedLessThanOrEqualTo(String value) {
            addCriterion("IS_SUPPORTED <=", value, "isSupported");
            return (Criteria) this;
        }

        public Criteria andIsSupportedLike(String value) {
            addCriterion("IS_SUPPORTED like", value, "isSupported");
            return (Criteria) this;
        }

        public Criteria andIsSupportedNotLike(String value) {
            addCriterion("IS_SUPPORTED not like", value, "isSupported");
            return (Criteria) this;
        }

        public Criteria andIsSupportedIn(List<String> values) {
            addCriterion("IS_SUPPORTED in", values, "isSupported");
            return (Criteria) this;
        }

        public Criteria andIsSupportedNotIn(List<String> values) {
            addCriterion("IS_SUPPORTED not in", values, "isSupported");
            return (Criteria) this;
        }

        public Criteria andIsSupportedBetween(String value1, String value2) {
            addCriterion("IS_SUPPORTED between", value1, value2, "isSupported");
            return (Criteria) this;
        }

        public Criteria andIsSupportedNotBetween(String value1, String value2) {
            addCriterion("IS_SUPPORTED not between", value1, value2, "isSupported");
            return (Criteria) this;
        }

        public Criteria andIsVerifiedByIsNull() {
            addCriterion("IS_VERIFIED_BY is null");
            return (Criteria) this;
        }

        public Criteria andIsVerifiedByIsNotNull() {
            addCriterion("IS_VERIFIED_BY is not null");
            return (Criteria) this;
        }

        public Criteria andIsVerifiedByEqualTo(String value) {
            addCriterion("IS_VERIFIED_BY =", value, "isVerifiedBy");
            return (Criteria) this;
        }

        public Criteria andIsVerifiedByNotEqualTo(String value) {
            addCriterion("IS_VERIFIED_BY <>", value, "isVerifiedBy");
            return (Criteria) this;
        }

        public Criteria andIsVerifiedByGreaterThan(String value) {
            addCriterion("IS_VERIFIED_BY >", value, "isVerifiedBy");
            return (Criteria) this;
        }

        public Criteria andIsVerifiedByGreaterThanOrEqualTo(String value) {
            addCriterion("IS_VERIFIED_BY >=", value, "isVerifiedBy");
            return (Criteria) this;
        }

        public Criteria andIsVerifiedByLessThan(String value) {
            addCriterion("IS_VERIFIED_BY <", value, "isVerifiedBy");
            return (Criteria) this;
        }

        public Criteria andIsVerifiedByLessThanOrEqualTo(String value) {
            addCriterion("IS_VERIFIED_BY <=", value, "isVerifiedBy");
            return (Criteria) this;
        }

        public Criteria andIsVerifiedByLike(String value) {
            addCriterion("IS_VERIFIED_BY like", value, "isVerifiedBy");
            return (Criteria) this;
        }

        public Criteria andIsVerifiedByNotLike(String value) {
            addCriterion("IS_VERIFIED_BY not like", value, "isVerifiedBy");
            return (Criteria) this;
        }

        public Criteria andIsVerifiedByIn(List<String> values) {
            addCriterion("IS_VERIFIED_BY in", values, "isVerifiedBy");
            return (Criteria) this;
        }

        public Criteria andIsVerifiedByNotIn(List<String> values) {
            addCriterion("IS_VERIFIED_BY not in", values, "isVerifiedBy");
            return (Criteria) this;
        }

        public Criteria andIsVerifiedByBetween(String value1, String value2) {
            addCriterion("IS_VERIFIED_BY between", value1, value2, "isVerifiedBy");
            return (Criteria) this;
        }

        public Criteria andIsVerifiedByNotBetween(String value1, String value2) {
            addCriterion("IS_VERIFIED_BY not between", value1, value2, "isVerifiedBy");
            return (Criteria) this;
        }

        public Criteria andCommentsIsNull() {
            addCriterion("COMMENTS is null");
            return (Criteria) this;
        }

        public Criteria andCommentsIsNotNull() {
            addCriterion("COMMENTS is not null");
            return (Criteria) this;
        }

        public Criteria andCommentsEqualTo(String value) {
            addCriterion("COMMENTS =", value, "comments");
            return (Criteria) this;
        }

        public Criteria andCommentsNotEqualTo(String value) {
            addCriterion("COMMENTS <>", value, "comments");
            return (Criteria) this;
        }

        public Criteria andCommentsGreaterThan(String value) {
            addCriterion("COMMENTS >", value, "comments");
            return (Criteria) this;
        }

        public Criteria andCommentsGreaterThanOrEqualTo(String value) {
            addCriterion("COMMENTS >=", value, "comments");
            return (Criteria) this;
        }

        public Criteria andCommentsLessThan(String value) {
            addCriterion("COMMENTS <", value, "comments");
            return (Criteria) this;
        }

        public Criteria andCommentsLessThanOrEqualTo(String value) {
            addCriterion("COMMENTS <=", value, "comments");
            return (Criteria) this;
        }

        public Criteria andCommentsLike(String value) {
            addCriterion("COMMENTS like", value, "comments");
            return (Criteria) this;
        }

        public Criteria andCommentsNotLike(String value) {
            addCriterion("COMMENTS not like", value, "comments");
            return (Criteria) this;
        }

        public Criteria andCommentsIn(List<String> values) {
            addCriterion("COMMENTS in", values, "comments");
            return (Criteria) this;
        }

        public Criteria andCommentsNotIn(List<String> values) {
            addCriterion("COMMENTS not in", values, "comments");
            return (Criteria) this;
        }

        public Criteria andCommentsBetween(String value1, String value2) {
            addCriterion("COMMENTS between", value1, value2, "comments");
            return (Criteria) this;
        }

        public Criteria andCommentsNotBetween(String value1, String value2) {
            addCriterion("COMMENTS not between", value1, value2, "comments");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INFORMATION_SCHEMA.SQL_PARTS
     *
     * @mbggenerated do_not_delete_during_merge Sat Mar 21 14:24:49 ICT 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table INFORMATION_SCHEMA.SQL_PARTS
     *
     * @mbggenerated Sat Mar 21 14:24:49 ICT 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}